<?php

/**
 * Implements hook_form_FORM_ID_alter().
 */
function uhsg_search_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $form['#attached']['library'][] = 'uhsg_search/uhsg-search';
    $form['#attached']['library'][] = 'uhsg_search/filter_search';
    $form['search_api_fulltext']['#attributes']['placeholder'] = t('Search instructions by text (try also the beginning of a word)');
  }
}

/**
 * Implements hook_preprocess_node().
 * Add content type as data attribute for search filtering.
 */
function uhsg_search_preprocess_node(&$variables) {
  if ($variables['view_mode'] == 'constrained') {
    $node = $variables['node'];
    if ($node->getType() == 'article') {
      $variables['attributes']['data-type'] = uhsg_search_article_is_degree_programme_specific($node) ? 'article_degree_programme_specific' : 'article_general';
    }
    else {
      $variables['attributes']['data-type'] = $node->getType();
    }
  }
}

/**
 * Return TRUE if active degree programme is one of the terms in the node.
 *
 * @param $node
 * @return bool TRUE if active degree programme is one of the terms in the node.
 */
function uhsg_search_article_is_degree_programme_specific($node) {
  $active_degree_programme = \Drupal::service('uhsg_active_degree_programme.active_degree_programme')->getId();
  $terms = $node->get('field_article_degree_programme')->getValue();
  if ($terms && $active_degree_programme) {
    foreach ($terms as $term) {
      // check if article has the active degree programme as term.
      if ($active_degree_programme == $term['target_id']) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_search_api_solr_query_alter().
 */
function uhsg_search_search_api_solr_query_alter(\Solarium\QueryType\Select\Query\Query $solarium_query, \Drupal\search_api\Query\QueryInterface $query) {
  uhsg_search_wildcard_query($solarium_query);
}

/**
 * Transform single word queries into wildcard queries to match partial words.
 * Does not affect the query when multiple words are provided.
 *
 * Example transformation:
 *
 * "teachi" -> teachi*
 *
 * @param \Solarium\QueryType\Select\Query\Query $solarium_query
 */
function uhsg_search_wildcard_query(\Solarium\QueryType\Select\Query\Query $solarium_query) {
  $query = $solarium_query->getQuery();
  $single_word_query = !empty($query) && strpos($query, '+') === FALSE;

  if ($single_word_query) {

    // Remove quotes.
    $word = str_replace('"', '', $query);

    // Query with exact and wildcard term to match both exact and partial text.
    $query = "$word OR $word*";

    // Override query.
    $solarium_query->setQuery($query);
  }
}
