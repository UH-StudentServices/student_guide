<?php

/**
 * @file
 * Contains uhsg_article.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function uhsg_article_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the uhsg_article module.
    case 'help.page.uhsg_article':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides article paragraphs.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave() for node.
 */
function uhsg_article_node_presave(EntityInterface $entity) {
  uhsg_article_assign_degree_programmes_by_faculties($entity);
}

/**
 * Implements hook_ENTITY_TYPE_presave() for paragraph.
 */
function uhsg_article_paragraph_presave(EntityInterface $entity) {
  uhsg_article_assign_degree_programmes_by_faculties($entity);
}

/**
 * Assign degree programmes by faculties.
 */
function uhsg_article_assign_degree_programmes_by_faculties(EntityInterface $entity) {
  $field_degree_programme = NULL;
  $field_faculty = NULL;
  $entity_type_bundle_key = $entity->getEntityTypeId() . '|' . $entity->bundle();

  // Set field names depending on entity type + bundle combination.
  switch ($entity_type_bundle_key) {
    case 'node|article':
      $field_degree_programme = 'field_article_degree_programme';
      $field_faculty = 'field_article_faculty';
      break;

    case 'paragraph|paragraph':
      $field_degree_programme = 'field_paragraph_degree_programme';
      $field_faculty = 'field_paragraph_faculty';
      break;
  }

  if ($field_degree_programme && $field_faculty) {
    $faculty_terms = $entity->get($field_faculty)->referencedEntities();
    
    if (!empty($faculty_terms)) {

      // Existing article degree programme term IDs.
      $existing_article_degree_programme_term_ids = array_map(function ($reference) {
        return $reference['target_id'];
      }, $entity->get($field_degree_programme)->getValue());

      // Faculty degree programme term IDs.
      $faculty_degree_programme_term_ids = [];

      foreach ($faculty_terms as $faculty_term) {
        foreach ($faculty_term->field_faculty_degree_programme as $degree_programme) {
          $faculty_degree_programme_term_ids[] = $degree_programme->target_id;
        }
      }

      // Merge article and faculty degree programme IDs avoiding duplicates.
      $merged_article_degree_programme_term_ids = array_unique(array_merge(
        $existing_article_degree_programme_term_ids,
        $faculty_degree_programme_term_ids
      ));

      // Reset article degree programme term IDs.
      $entity->{$field_degree_programme} = [];

      // Store merged degree programme term references.
      foreach ($merged_article_degree_programme_term_ids as $degree_programme_term_id) {
        $entity->{$field_degree_programme}[] = ['target_id' => $degree_programme_term_id];
      }
    }
  }
}
