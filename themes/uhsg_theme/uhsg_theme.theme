<?php

use Drupal\block\Entity\Block;
use Drupal\Core\Url;
use Drupal\block_content\Entity\BlockContent;
use Drupal\Component\Render\FormattableMarkup;
use Drupal\node\Entity\Node;

/**
 * @file
 * Functions to support theming in the uhsg_theme theme.
 */

/**
 * Implements hook_page_attachments_alter().
 *
 * Add breakpoints to javascript
 */
function uhsg_theme_page_attachments_alter(array &$page) {
  $breakpoints = \Drupal::service('breakpoint.manager')->getBreakpointsByGroup('UhsgTheme');
  if ($breakpoints) {
    $media_queries = [];
    foreach ($breakpoints as $id => $breakpoint) {
      $media_queries[$id] = $breakpoint->getMediaQuery();
    }
    $page['#attached']['drupalSettings']['breakpoints'] = $media_queries;
  }
}

/**
 * Implements hook_preprocess_HOOK() for Region templates.
 */
function uhsg_theme_preprocess_region(&$variables) {
  switch ($variables['region']) {
    case 'header':
      $variables['logo_path'] = \Drupal::config('uhsg_service_provider_details.settings')->get('logo_path');
      $variables['logo_text'] = \Drupal::config('uhsg_service_provider_details.settings')->get('logo_text');
      break;

    case 'footer':
      $variables['logo_path'] = \Drupal::config('uhsg_service_provider_details.settings')->get('logo_path');
      $variables['logo_text'] = \Drupal::config('uhsg_service_provider_details.settings')->get('logo_text');
      $variables['copyright_text'] = \Drupal::config('uhsg_service_provider_details.settings')->get('copyright_text');
      $variables['contact_info'] = \Drupal::config('uhsg_service_provider_details.settings')->get('contact_info');
      break;

    case 'before_content':
      $variables['attributes']['class'][] = 'container';
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK() for language links.
 */
function uhsg_theme_preprocess_links__language_block(&$variables) {
  foreach ($variables['links'] as $langcode => &$link) {
    // add classes for theming
    $link['link']['#options']['attributes']['class'][] = 'links__link theme-language';
    $link['link']['#title'] = new FormattableMarkup('<abbr title="@title">@langcode</abbr>', ['@title' => $link['link']['#title'], '@langcode' => $langcode]);
    // hide active language
    $active_language = Drupal::languageManager()->getCurrentLanguage()->getId();
    if ($active_language == $langcode) {
      unset($variables['links'][$langcode]);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for menus.
 * Add classes needed by styleguide.
 */
function uhsg_theme_preprocess_menu(&$variables) {
  $menu_classes = '';
  $link_classes = '';

  switch ($variables['menu_name']) {
    case 'header-links-en':
    case 'header-links-fi':
    case 'header-links-sv':
      $link_classes = 'links__link';
      $menu_classes = 'links';
      break;

    case 'footer-links-en':
    case 'footer-links-fi':
    case 'footer-links-sv':
      $link_classes = 'list-of-links__link button--action icon--arrow-right theme-transparent-alt';
      $menu_classes = 'list-of-links--condensed theme-footer';
      break;

    case 'main-menu-en':
    case 'main-menu-fi':
    case 'main-menu-sv':
      $link_classes = 'is-lvl1 menu-item';
      $menu_classes = 'menu';

      $variables['#cache']['contexts'][] = 'user';
      $variables['#cache']['contexts'][] = 'session';
      $avatar_image_url = \Drupal::service('uhsg_avatar.avatar_service')->getAvatar();
      $variables['avatar_image']['url'] = $avatar_image_url;
      $variables['avatar_image']['classes'] = $link_classes . ' main-menu__right avatar';
      if (\Drupal::service('uhsg_avatar.avatar_service')->isDefault($avatar_image_url)) {
        $variables['avatar_image']['classes'] .= ' avatar--default';
      }

      $variables['home_link']['link'] = \Drupal::config('uhsg_service_provider_details.settings')->get('home_path');
      $variables['home_link']['classes'] = $link_classes . ' main-menu__front';
      foreach ($variables['items'] as $item) {
        if ($item['url']->isRouted()) {
          switch ($item['url']->getRouteName()) {
            case 'samlauth.saml_controller_login':
              $item['attributes']->addClass('main-menu__right');
              break;

            case 'samlauth.saml_controller_logout':
              $item['attributes']->addClass(['main-menu__right', 'main-menu__logout']);
              break;
          }
        }
      }
      break;
  }

  if ($menu_classes && $link_classes) {
    $variables['attributes']['class'][] = $menu_classes;

    foreach ($variables['items'] as &$item) {
      $item['attributes']->addClass($link_classes);

      // we want a different active-class than what drupal provides.
      $current_path = \Drupal::request()->getRequestUri();

      if ($item['url']->toString() == $current_path) {
        $item['is_active'] = TRUE;
      }

      $item_has_children = !empty($item['below']);

      if ($item_has_children) {
        $item['attributes']->addClass('is-expandable');

        if (isset($item['is_active'])) {
          $item['attributes']->addClass('is-open');
        }
      }

      foreach ($item['below'] as &$child_item) {
        $child_item['attributes']->addClass('is-lvl2 menu-item');
      }
    }
  }
}

/**
 * Implements hook_preprocess_field().
 *
 * Add classes needed by styleguide.
 */
function uhsg_theme_preprocess_field(array &$variables, $hook) {
  switch ($variables['element']['#field_name']) {
    case 'field_paragraph_links':
      uhsg_theme_process_link_titles($variables);
      $variables['attributes']['class'][] = 'list-of-links';
      foreach ($variables['items'] as &$item) {
        $item['content']['#options']['attributes']['class'][] = 'list-of-links__link button--action icon--arrow-right';
      }
      break;

    case 'field_accordion_links':
      uhsg_theme_process_link_titles($variables);
      $variables['attributes']['class'][] = 'list-of-links__compact';
      foreach ($variables['items'] as &$item) {
        $item['content']['#options']['attributes']['class'][] = 'list-of-links__link icon--arrow-right button--action theme-transparent';
      }
      break;

    case 'field_theme_articles':
      $variables['attributes']['class'][] = 'grid-container tube--large';
      break;

    case 'field_article_related':
      $variables['attributes']['class'][] = 'grid-container tube--large';
      $variables['description'] = t('You will find related content for students on the Instructions for Students Service.');
      break;

    case 'body':
    case 'field_paragraph_body':
      $variables['attributes']['class'][] = 'textarea';
      break;

    case 'field_accordion_title':
      $variables['attributes']['class'][] = 'accordion__title button--accordion';
      break;

    case 'field_content_block_text':
      $variables['attributes']['class'][] = 'box-subtitle__ingress is-center-mobile';

      $variables['attributes']['class'][] = 'is-center-mobile';
      break;

    case 'field_news_degree_programme':
      $variables['created'] = $variables['element']['#object']->getCreatedTime();
      $variables['view_mode'] = $variables['element']['#view_mode'];
    case 'field_theme_section_title':
      $variables['attributes']['class'][] = 'is-center-mobile';
      break;

    case 'field_theme_section_instructions':
      $variables['attributes']['class'][] = 'grid-container tube';
      break;

    case 'field_article_paragraph':
      uhsg_theme_collect_table_of_contents($variables);
      break;
  }
}

/**
 * If the link targets a node and no link title is set, use link target node
 * title as the link text.
 *
 * @param array $variables
 */
function uhsg_theme_process_link_titles(array &$variables) {
  foreach ($variables['items'] as &$item) {

    /** @var $url \Drupal\Core\Url */
    $url = $item['content']['#url'];

    // If the link is internal and title matches url, no title is set.
    if ($url->isRouted() && $item['content']['#title'] == $url->toString()) {

      // Check for node links.
      if ($url->getRouteName() == 'entity.node.canonical') {
        $params = $url->getRouteParameters();
        $nid = $params['node'];
        $node = Node::load($nid);
        if ($node) {
          $translation = \Drupal::entityManager()->getTranslationFromContext($node);
          $item['content']['#title'] = $translation->getTitle();
        }

        // Add target node to cache tags in case the node title changes.
        $variables['#cache']['tags'][] = 'node:' . $nid;
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for views.
 */
function uhsg_theme_preprocess_views_view(&$variables) {
  switch ($variables['view']->id()) {
    case 'themes':
      $variables['content_attributes']['class'][] = 'grid-container';
      break;

    case 'search':
      // Add front page text block.
      $block_entity = BlockContent::load(1);
      $block_view = \Drupal::entityTypeManager()->getViewBuilder('block_content')->view($block_entity);
      if ($block_view) {
        $variables['frontpagetextblock'] = $block_view;
      }

      // Add front page additional text block.
      $additional_text_block = \Drupal::service('entity.repository')->loadEntityByUuid('block_content', 'ecd71681-cd04-4ee0-b9b2-015cc2a19ff0');
      $additional_text_block_translation = \Drupal::entityManager()->getTranslationFromContext($additional_text_block);
      if ($additional_text_block_translation) {
        $variables['frontpageadditionaltextblock'] = $additional_text_block_translation->field_content_block_text->value;
        $variables['#attached']['library'][] = 'uhsg_theme/tooltip';
      }

      $variables['title'] = $variables['view']->getTitle();
      $variables['content_attributes']['class'][] = 'view-content';
      $variables['degree_programme_switcher'] = _uhsg_theme_get_degree_programme_switcher();
      _uhsg_theme_add_link_to_instructions_for_students($variables);
      break;

    case 'news':
      $variables['attributes']['class'][] = 'tube';
      $variables['degree_programme_switcher'] = _uhsg_theme_get_degree_programme_switcher();
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function uhsg_theme_preprocess_block(array &$variables) {
  switch ($variables['elements']['#id']) {
    case 'mainmenuen':
    case 'mainmenufi':
    case 'mainmenusv':
      $variables['attributes']['class'][] = 'main-menu';
      break;

    case 'views_block__degree_programmes_block_1':
      /** @var \Drupal\uhsg_active_degree_programme\ActiveDegreeProgrammeService $activeDegreeProgrammeService */
      $activeDegreeProgrammeService = \Drupal::service('uhsg_active_degree_programme.active_degree_programme');
      $degree_programme_code = $activeDegreeProgrammeService->getCode();
      $degree_programme_name = $activeDegreeProgrammeService->getName();
      $variables['code'] = $degree_programme_code;
      $variables['label'] = $degree_programme_name ? $degree_programme_name : t('Select degree programme');
      $variables['#cache']['contexts'][] = 'active_degree_programme';
      $variables['reset_link']['link'] = Url::fromRoute('uhsg_active_degree_programme.reset_active');
      $variables['reset_link']['classes'] = 'button--action icon--remove theme-transparent button--reset is-center-mobile';
      break;

    case 'generalnews':
    case 'newsperdegreeprogramme':
    case 'newsperdegreeprogramme_2':
      $variables['content_attributes']['class'][] = 'grid-container';

      // Truncate news headlines in browser, so that search engines can pick up
      // the headlines in full text.
      $variables['#attached']['library'][] = 'uhsg_theme/truncateText';
      $variables['#attached']['drupalSettings']['truncateText'] = [
        'maxLength' => 100,
        'selector' => '.block-uhsg-news .field--name-title',
      ];

      break;

    case 'themesperusergroup':
      $variables['news_per_degree_programme'] = _uhsg_theme_get_news_per_degree_programme();
      break;
  }
}

/**
 * Implements template_preprocess_page().
 *
 * Add node changed time as a template variable.
 */
function uhsg_theme_preprocess_page(&$variables) {
  if (isset($variables['node'])) {
    $node = is_object($variables['node']) ? $variables['node'] : Node::load($variables['node']);
    $variables['updated'] = \Drupal::service('date.formatter')->format($node->getChangedTime(), 'short');
  }
}

/**
 * Create table of contents.
 *
 * Important: There are some items that gets filtered during module
 * pre-processing phase, so it is important to run this after filtering is done.
 *
 * @param array $variables
 */
function uhsg_theme_collect_table_of_contents(array &$variables) {
  $variables['table_of_contents'] = [];
  foreach ($variables['items'] as $key => $item) {
    if ($item['content']['#paragraph']->hasField('field_paragraph_title')) {
      $variables['table_of_contents'][] = [
        'id' => $item['content']['#paragraph']->id(),
        'title' => $item['content']['#paragraph']->get('field_paragraph_title'),
      ];
    }
  }
}

/**
 * Implements template_preprocess_file_link().
 *
 * Override file link classes with styleguide classes.
 */
function uhsg_theme_preprocess_file_link(&$variables) {
  $variables['attributes']['class'] = ['list-of-links__link button--action icon--arrow-right theme-transparent'];
}

/**
 * Implements template_preprocess_node().
 *
 * Add node type as label if current page is not a theme.
 * Add referencing themes view.
 * Add jQuery Tooltip when viewing instructions.
 * Add degree programme switcher as a template variable.
 */
function uhsg_theme_preprocess_node(&$variables) {
  if (in_array($variables['view_mode'], ['teaser', 'constrained'])) {
    $node_viewed = \Drupal::routeMatch()->getParameter('node');
    $current_page_is_theme = $node_viewed && $node_viewed->bundle() == 'theme';
    $variables['type'] = !$current_page_is_theme ? $variables['node']->type->entity->label() : NULL;
  }
  $bundle = $variables['node']->bundle();
  if ($bundle == 'article' && $variables['page']) {
    $themes_block = \Drupal::service('plugin.manager.block')->createInstance('themes_referencing_instructions', []);
    $variables['themes'] = $themes_block->build();
  }
  if (in_array($bundle, ['article', 'theme']) && $variables['page']) {
    _uhsg_theme_add_link_to_instructions_for_students($variables);
  }
  if ($bundle == 'article') {
    $variables['new_students_label'] = t('New students');
    $variables['new_students_description'] = t('New students study in the new degree programmes that started August 1, 2017. Students studying according to the old degree structure are referred to as old students.');
    $variables['#attached']['library'][] = 'uhsg_theme/tooltip';
  }
  if ($variables['page']) {
    $variables['degree_programme_switcher'] = _uhsg_theme_get_degree_programme_switcher();
  }
}

function _uhsg_theme_add_link_to_instructions_for_students(&$variables) {
  $link_to_instructions_for_students_block = \Drupal::service('plugin.manager.block')->createInstance('link_to_instructions_for_students', []);
  if ($link_to_instructions_for_students_block->access(\Drupal::currentUser()) instanceof \Drupal\Core\Access\AccessResultAllowed) {
    $variables['link_to_instructions_for_students'] = $link_to_instructions_for_students_block->build();
  }
}

/**
 * Implements template_preprocess_html().
 * Add touch icons to head.
 */
function uhsg_theme_preprocess_html(&$variables) {
  $theme_path = drupal_get_path('theme', 'uhsg_theme');
  $files = file_scan_directory($theme_path . '/images/favicons', '/.*\.png$/');

  foreach ($files as $url => $file) {
    $icon = [
      '#tag' => 'link',
      '#attributes' => [
        'rel' => preg_match('/(apple-touch-icon)/', $file->name) ? 'apple-touch-icon' : 'icon',
        'href' => file_create_url($file->uri),
        'type' => preg_match('/(apple-touch-icon)/', $file->name) ? NULL : 'image/png',
        'sizes' => preg_match('/[0-9]\w+/', $file->name, $matches) ? $matches[0] : NULL,
      ],
    ];
    $variables['page']['#attached']['html_head'][] = [$icon, $file->name];
  }
}

/**
 * Implements hook_preprocess_HOOK() for views grouping.
 * Handle cusotm grouping title with working translation.
 */
function uhsg_theme_preprocess_views_view_grouping(&$variables) {
  if ($variables['view']->id() == 'degree_programmes' && strip_tags($variables['title']) == 1) {
    $variables['attributes']['class'] = 'my-degree-programmes';
    $variables['title'] = \Drupal::config('flag.flag.my_degree_programmes')->get('label');;
  }
  else {
    unset($variables['title']);
  }
}

/**
 * Breadcrumb: Use only the first level (homepage). Override the text for the
 * home page link.
 */
function uhsg_theme_preprocess_breadcrumb(&$variables) {
  $breadcrumb = $variables['breadcrumb'][0];
  $breadcrumb['text'] = \Drupal::config('system.site')->get('name');
  $variables['breadcrumb'] = [$breadcrumb];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * add subregion template for blocks
 */
function uhsg_theme_theme_suggestions_block_alter(&$suggestions, $vars, $hook) {

  $subregion_blocks = [
    'views_block__themes_block_1',
    'generalnews',
    'newsperdegreeprogramme',
    'newsperdegreeprogramme_2',
    'views_block__google_analytics_summary_top_searches_block',
  ];

  if (in_array($vars['elements']['#id'], $subregion_blocks)) {
    $suggestions[] = 'block__subregion';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * add template for main menus
 */
function uhsg_theme_theme_suggestions_menu_alter(&$suggestions, $vars, $hook) {

  $main_menus = [
    'main-menu-en',
    'main-menu-fi',
    'main-menu-sv',
  ];

  if (in_array($vars['menu_name'], $main_menus)) {
    $suggestions[] = 'menu__main';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * add template for tag lists.
 */
function uhsg_theme_theme_suggestions_field_alter(&$suggestions, $vars, $hook) {
  $tag_fields = [
    'field_article_degree_programme',
    'field_news_degree_programme',
    'field_paragraph_degree_programme',
  ];

  if (in_array($vars['element']['#field_name'], $tag_fields)) {
    $suggestions[] = 'field__tag_list_item';
  }
}

function _uhsg_theme_get_degree_programme_switcher() {
  $degree_programme_switcher = Block::load('views_block__degree_programmes_block_1');
  if (is_null($degree_programme_switcher)) {
    // In case the block has gone missing, we don't fail completely but will
    // alert in the logs.
    \Drupal::logger('uhsg_theme')->alert('Degree programme switcher missing!');
    return '';
  }
  return \Drupal::entityTypeManager()->getViewBuilder('block')->view($degree_programme_switcher);
}

function _uhsg_theme_get_news_per_degree_programme() {
  $news_per_degree_programme = Block::load('newsperdegreeprogramme');

  return $news_per_degree_programme
    ? \Drupal::entityTypeManager()->getViewBuilder('block')->view($news_per_degree_programme)
    : '';
}
